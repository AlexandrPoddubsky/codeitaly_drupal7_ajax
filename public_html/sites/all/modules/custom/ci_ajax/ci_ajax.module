<?php
/**
 * Implements hook_menu().
 */
function ci_ajax_menu(){
  $items = array();

  $items['ci/api/lastestentities/%'] = array(
    // Funzione dove andremo a "costruire" le informazioni/contenuti della risposta
    'page callback' => 'ci_ajax_entities',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    'page arguments' => array(3),
    // Funzione che avrà il compito di gestire la risposta che verrà inviata al browser.
    'delivery callback' => 'ci_ajax_delivery_callback',
  );

  return $items;
}


/**
 *  Page callback for "ci/api/lastentities"
 */
function ci_ajax_entities($range) {
  // Preset di numeri di entità.
  $preset = array(3, 5, 10);

  // Pulizia e trasformazione in intero dell'argomento recuperato dall'url.
  $range = intval($range);

  /*
   * Utilizzando EntityFieldQuery recuperiamo tutti gli id delle entità che
   * rispettano i nostri requisiti.
   * Es:Ultimi 5 articoli, ordinati per data di creazione in ordine decrescente.
   */

  if (in_array($range, $preset)){
    $q = new EntityFieldQuery();

    $q->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'article')
      ->propertyCondition('status', NODE_PUBLISHED)
      ->range(0, $range)
      ->propertyOrderBy('created', 'DESC')
      ->addMetaData('account', user_load(1)); // Run the query as user 1.

    $results = $q->execute();
  }else {
    $results = '';
  }

  if (!empty($results)) {
    $entities = array();

    /*
     * Le chiavi presenti in $results['node'] corrispondono agli ID delle entità
     * nodo.
     * A cause di un riordino "automatico" in fase di output json, occorre
     * ordinare l'output preventivamente.
     */
    foreach (entity_load('node', array_keys($results['node'])) as $row) {
      $entities[] = $row;
    }

    return $entities;
  }

  return array(0 => 'Nessun risultato');
}

/**
 *  Delivery callback for "ci/api/lastentities"
 */
function ci_ajax_delivery_callback($page_callback) {
  print drupal_json_output($page_callback);
}


/**
 * Block section
 */

/**
 * Implements hook_theme().
 */
function ci_ajax_theme($existing, $type, $theme, $path) {
  return array(
    'last_entities_block' => array(
      'render element' => 'elements',
      'template' => 'last-entities-block',
      'path' => drupal_get_path('module', 'ci_ajax') . '/templates',
    ),
  );
}


/**
* Implements hook_block_info().
*/
function ci_ajax_block_info() {
 $blocks = array();

 $blocks['last_entities'] = array(
   'info' => t('Last entities'),
 );

 return $blocks;
}

/**
 * Implemtents hook_block_configure().
 */
function ci_ajax_block_configure($delta = '') {
  $form = array();
  if ($delta == 'last_entities') {
    $form['ci_ajax_num_entities'] = array(
      '#type' => 'select',
      '#title' => t('Numero di entità da mostrare'),
      '#options' => array(
        3 => '3',
        5 => '5',
        10 => '10',
      ),
      '#default_value' => variable_get('ci_ajax_num_entities', 3),
    );
  }

  return $form;
}

/**
 * Implements hook_block_save().
 */
function ci_ajax_block_save($delta = '', $edit = array()) {
  if ($delta == 'last_entities') {
    variable_set('ci_ajax_num_entities', intval($edit['ci_ajax_num_entities']));
  }
}


/**
* Implements hook_block_view().
*/
function ci_ajax_block_view($delta='') {
  // Preparazione di parametri da passare al nostro script.

  $my_settings = array(
    'num_entities' => variable_get('ci_ajax_num_entities'),
  );

  drupal_add_js(array('ci_ajax' => $my_settings), 'setting');

  $block = array();

  switch($delta) {
    case 'last_entities' :
      // Titolo di defaul del blocco
      $block['subject'] = 'Ultime entità';
      // Contentuto del blocco
      $block['content'] = theme('last_entities_block', $my_settings);
      break;
  }

  return $block;
}
